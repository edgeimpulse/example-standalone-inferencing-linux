/* Edge Impulse Linux SDK
 * Copyright (c) 2021 EdgeImpulse Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

#include <stdio.h>
#include <cstring>
#include <iostream>
#include <sstream>
#include "edge-impulse-sdk/classifier/ei_run_classifier.h"

const float features[] = {
    0x1f2022, 0x1f2024, 0x212326, 0x242526, 0x242626, 0x242627, 0x232629, 0x22262a, 0x1f2429, 0x22262a, 0x222527, 0x19191e, 0x17161b, 0x18191e, 0x1a1b20, 0x191b1f, 0x181b20, 0x1b1f25, 0x1b1d20, 0x191c1e, 0x17191c, 0x15161b, 0x15171c, 0x18191d, 0x18191d, 0x18191e, 0x1f2125, 0x1e2023, 0x17181c, 0x181a1e, 0x181a1f, 0x1a1e24, 0x2c2f2d, 0x2e3334, 0x2e3436, 0x2e2f2c, 0x2b2b26, 0x2a2c29, 0x292d2d, 0x272c2f, 0x24282d, 0x24282c, 0x24272a, 0x1d1f24, 0x1b1b1f, 0x1b1b1f, 0x1c1d21, 0x1a1c20, 0x1a1c20, 0x1a1d21, 0x1b1d1f, 0x1d1e1d, 0x1c1e1d, 0x1c1d1d, 0x1a1a1c, 0x16171a, 0x16161a, 0x16181c, 0x1c2022, 0x1c1f22, 0x17191d, 0x191b1e, 0x191b1f, 0x181b1f, 0x383932, 0x383d3d, 0x373c3d, 0x2e2c28, 0x27221f, 0x292827, 0x2a2e31, 0x282d31, 0x25292c, 0x26292c, 0x262a2b, 0x1f2327, 0x1f2126, 0x1e1f24, 0x1d1e22, 0x1b1d20, 0x1a1b1f, 0x1a1b20, 0x191b1f, 0x19191c, 0x19191b, 0x1a1c1d, 0x1c1d1f, 0x1b1c1e, 0x1a1a1c, 0x191a1c, 0x17191d, 0x16171c, 0x17181c, 0x181a1e, 0x191b1f, 0x191c20, 0x362f26, 0x353634, 0x313230, 0x211c1d, 0x1d181c, 0x252529, 0x282d31, 0x262b2e, 0x25282c, 0x24272b, 0x24272a, 0x202429, 0x1f2228, 0x1d2126, 0x1c1f24, 0x1c1d21, 0x1f2022, 0x1d1f22, 0x1a1c20, 0x19191e, 0x17161a, 0x17171b, 0x191b1f, 0x1a1b20, 0x19191b, 0x1a1a1b, 0x1d1e1f, 0x1c1f22, 0x191c1f, 0x17191d, 0x16181d, 0x181a1d, 0x32302e, 0x303130, 0x292828, 0x1f1b1d, 0x202025, 0x26292f, 0x262b2f, 0x25292d, 0x24282d, 0x22272c, 0x21252b, 0x1f242a, 0x1e2329, 0x1e2227, 0x1c1f26, 0x1c1d22, 0x212021, 0x232222, 0x212223, 0x1b1d20, 0x17181d, 0x161519, 0x19191d, 0x1c1e22, 0x18191e, 0x17171b, 0x1b1d21, 0x1e2327, 0x1e2426, 0x1e2223, 0x1c1e20, 0x191a1d, 0x353a3b, 0x2f3435, 0x2b2c2c, 0x272829, 0x272a2e, 0x272b30, 0x25292c, 0x24262b, 0x22262c, 0x21252c, 0x1f242a, 0x1f2229, 0x1f2229, 0x1e2129, 0x1d2126, 0x1c1e23, 0x19181b, 0x171619, 0x1c1b1c, 0x1d1f22, 0x1b1d21, 0x18181b, 0x1a1a1c, 0x1c1e21, 0x1a1c21, 0x1a1b20, 0x191c21, 0x191d23, 0x1a1e24, 0x1c2023, 0x1f2222, 0x1f2120, 0x34393a, 0x2f3433, 0x2c2d2c, 0x292a2b, 0x262a2e, 0x25282e, 0x23272a, 0x222427, 0x20242a, 0x20252b, 0x202328, 0x1f2226, 0x1f2227, 0x1e2127, 0x1e2127, 0x1c1d22, 0x18161b, 0x141319, 0x16151a, 0x1b1b1f, 0x1c1d21, 0x1a1a1d, 0x1b1c1d, 0x1d1e21, 0x1d1f23, 0x1c1f25, 0x1c1f24, 0x1a1d23, 0x191c22, 0x191c21, 0x1b1d21, 0x1d1f22, 0x323736, 0x2f312f, 0x292a29, 0x25292b, 0x24282d, 0x24282d, 0x22262b, 0x212326, 0x212226, 0x202327, 0x202227, 0x1f2226, 0x1f2125, 0x1f2125, 0x1e2126, 0x1d1e23, 0x19191e, 0x16151a, 0x151419, 0x1a1a1f, 0x1f2025, 0x1d1f22, 0x1d1d1f, 0x1d1f21, 0x1e2025, 0x1d2127, 0x1d2127, 0x1e2025, 0x1b1d22, 0x1a1d21, 0x1a1e23, 0x1b1f25, 0x323634, 0x2d2f2c, 0x282828, 0x26292d, 0x24292d, 0x23272d, 0x22272d, 0x202328, 0x202124, 0x202125, 0x202226, 0x202227, 0x1f2025, 0x1e2023, 0x1e1d21, 0x1d1d22, 0x1e1f23, 0x1d1d21, 0x1a191e, 0x1c1c21, 0x202227, 0x202226, 0x202124, 0x1f2125, 0x1e2127, 0x1e2228, 0x1e2228, 0x1e2127, 0x1d1f24, 0x1c1f25, 0x1c2128, 0x1c2127, 0x333532, 0x2d2d2b, 0x28292a, 0x25292d, 0x24282d, 0x23272c, 0x22262c, 0x20242a, 0x202226, 0x202225, 0x202226, 0x202226, 0x292a29, 0x262627, 0x1b1b1f, 0x1c1c20, 0x202226, 0x212327, 0x202226, 0x202227, 0x212327, 0x212326, 0x232529, 0x24272a, 0x22252a, 0x20242a, 0x202329, 0x1f2228, 0x1f2227, 0x1e2228, 0x1e2229, 0x1e2229, 0x38382e, 0x2e2c28, 0x292a2a, 0x262a2d, 0x23282d, 0x22262b, 0x21252b, 0x21252a, 0x202328, 0x202327, 0x202327, 0x202328, 0x242629, 0x252729, 0x1f2024, 0x1f2024, 0x212224, 0x212125, 0x222429, 0x22262a, 0x232529, 0x22262b, 0x22262e, 0x24292f, 0x24282e, 0x22272d, 0x21262c, 0x212429, 0x212429, 0x20242a, 0x1f242a, 0x1f242b, 0x423425, 0x322e2a, 0x2c2e2e, 0x282c2e, 0x25282c, 0x23272b, 0x21262a, 0x21252b, 0x202428, 0x212427, 0x212529, 0x21252a, 0x202429, 0x212428, 0x222429, 0x222225, 0x20211f, 0x201f20, 0x232427, 0x24282d, 0x25282d, 0x262a31, 0x262c35, 0x242a34, 0x252a34, 0x242931, 0x23282e, 0x23272c, 0x23272d, 0x222830, 0x22272f, 0x22272e, 0x714720, 0x373635, 0x323535, 0x2b2f30, 0x282b2d, 0x25292d, 0x23262b, 0x21242b, 0x21262a, 0x222728, 0x22262a, 0x21252b, 0x22252a, 0x232629, 0x222529, 0x222325, 0x222222, 0x222221, 0x232425, 0x26292d, 0x252a2f, 0x262a30, 0x272d35, 0x262d37, 0x272e38, 0x272e37, 0x252a2f, 0x252a2f, 0x252b33, 0x252c35, 0x252a31, 0x252b32, 0xb59972, 0x4d4841, 0x3a3e3d, 0x303332, 0x2b2d2e, 0x26292b, 0x22262a, 0x21252a, 0x222529, 0x232629, 0x22262b, 0x21262b, 0x222529, 0x232529, 0x24272b, 0x25272a, 0x242629, 0x25262a, 0x262628, 0x27292c, 0x272b31, 0x282b30, 0x2a2e33, 0x282e36, 0x27303a, 0x293039, 0x282e35, 0x272e36, 0x272f39, 0x282f39, 0x282e37, 0x282f38, 0xcab995, 0x555246, 0x3b403e, 0x323230, 0x2a2b2b, 0x262829, 0x222528, 0x222529, 0x222528, 0x222528, 0x22262c, 0x23262b, 0x232528, 0x23262b, 0x252930, 0x25292f, 0x25292e, 0x262a2f, 0x272a2d, 0x292b2f, 0x282c34, 0x292e35, 0x2b3036, 0x2a2e34, 0x292e34, 0x2a2f34, 0x2b3036, 0x2a333d, 0x2a333f, 0x2a333f, 0x2a333d, 0x2a343f, 0x907f55, 0x414239, 0x373934, 0x2d2e2d, 0x272829, 0x242627, 0x222427, 0x222427, 0x222427, 0x232529, 0x23272c, 0x25272b, 0x252629, 0x24282f, 0x252b34, 0x252a32, 0x26292e, 0x262a2e, 0x282d32, 0x282e35, 0x292f38, 0x293039, 0x293039, 0x2a2e34, 0x272729, 0x252324, 0x29292a, 0x2c333a, 0x2c3640, 0x2d3642, 0x2c3741, 0x2c3741, 0x585640, 0x343632, 0x313330, 0x2b2d2d, 0x27292b, 0x23262a, 0x212428, 0x212428, 0x212428, 0x22262a, 0x23262b, 0x242629, 0x25272a, 0x252a30, 0x262c34, 0x262a32, 0x272a2e, 0x282b2e, 0x292e33, 0x292f35, 0x293037, 0x29303a, 0x2a313c, 0x2b2f38, 0x222025, 0x1c1618, 0x242020, 0x2d3236, 0x2e3843, 0x2f3a46, 0x2f3a45, 0x2f3944, 0x3d3f36, 0x2e2f2f, 0x2b2d2d, 0x282b2b, 0x26292a, 0x23262a, 0x21252a, 0x21252a, 0x21262b, 0x22262b, 0x23272b, 0x242629, 0x262729, 0x26292d, 0x262a30, 0x272b30, 0x282b30, 0x282c31, 0x292d33, 0x2b2e33, 0x2a2f35, 0x2a3038, 0x2b323b, 0x2c323b, 0x25262e, 0x1f1c1f, 0x272627, 0x2f353c, 0x2f3a45, 0x303b48, 0x303c4a, 0x303b46, 0x38352b, 0x272829, 0x242627, 0x232426, 0x232525, 0x222426, 0x212327, 0x212429, 0x21252b, 0x22262b, 0x23262a, 0x242628, 0x252729, 0x25292d, 0x262a30, 0x272b31, 0x282d32, 0x282d33, 0x2a2e34, 0x2b2f33, 0x2b2f34, 0x2b3036, 0x2d3339, 0x2d353d, 0x2b313b, 0x2a2d33, 0x2d3135, 0x2f3841, 0x303b47, 0x313c49, 0x303c49, 0x303b46, 0x252523, 0x232424, 0x212224, 0x222124, 0x212224, 0x212223, 0x212224, 0x212226, 0x212227, 0x222529, 0x23262a, 0x232528, 0x25272b, 0x252a2f, 0x252a32, 0x262c33, 0x272d34, 0x282d32, 0x292d31, 0x2a2f33, 0x2b3035, 0x2c3137, 0x2c3339, 0x2e353d, 0x2e3741, 0x2d353d, 0x2e3439, 0x2f373f, 0x2f3a45, 0x313c46, 0x313c48, 0x313b47, 0x201f1f, 0x202121, 0x212122, 0x202122, 0x1f2023, 0x1f2023, 0x212224, 0x212225, 0x212224, 0x212224, 0x222326, 0x232427, 0x23262a, 0x24292f, 0x252a32, 0x262c33, 0x272d35, 0x282d32, 0x292c30, 0x2a2e31, 0x2b3034, 0x2b3239, 0x2c343c, 0x2c343c, 0x2e3339, 0x2e3337, 0x2f3436, 0x2f363b, 0x2e353e, 0x2f373f, 0x313c46, 0x303a45, 0x1b1b1c, 0x1e1e1e, 0x1f2020, 0x1d1e1f, 0x242423, 0x262627, 0x202226, 0x212326, 0x212224, 0x212225, 0x212224, 0x222325, 0x232428, 0x24272d, 0x252a31, 0x262b33, 0x272c33, 0x282c31, 0x282a2d, 0x292a2c, 0x2a2d32, 0x2a3139, 0x2a323a, 0x2b2e33, 0x2c2c2d, 0x2e3131, 0x2f3334, 0x2f3437, 0x30373e, 0x303a43, 0x303b46, 0x2f3840, 0x19191a, 0x1b1b1c, 0x1c1d1e, 0x23221f, 0x343025, 0x2d2c26, 0x1d1e22, 0x1f2024, 0x202124, 0x212125, 0x212225, 0x212326, 0x222529, 0x23272d, 0x242930, 0x242a32, 0x262a30, 0x272a2d, 0x262627, 0x252524, 0x28292a, 0x292c30, 0x292b2e, 0x292828, 0x2a2a28, 0x2d3233, 0x2f3436, 0x2f3336, 0x30383d, 0x2f3b45, 0x2f3a44, 0x2e353a, 0x171819, 0x19191a, 0x24201d, 0x2a251f, 0x1f1e1d, 0x1c1c1c, 0x1e1d1e, 0x1e1e20, 0x1e1f22, 0x1f1f22, 0x1f2022, 0x202226, 0x21242a, 0x22262c, 0x23272d, 0x23272d, 0x24282d, 0x252729, 0x232222, 0x22201f, 0x242322, 0x252424, 0x262524, 0x29292a, 0x2b2e32, 0x2c3339, 0x2d353d, 0x2e353b, 0x2f3437, 0x2d363c, 0x2d363f, 0x2d3336, 0x1b1a1a, 0x2c251d, 0x27221c, 0x1a1a1a, 0x19181a, 0x1a1a1b, 0x1b1b1c, 0x1c1c1e, 0x1e1e1f, 0x1d1d1e, 0x1e1e1f, 0x1f1f22, 0x202226, 0x212327, 0x222327, 0x222528, 0x23262a, 0x232527, 0x201f1f, 0x1f1c1c, 0x211d1c, 0x23201d, 0x262525, 0x292e31, 0x2a3138, 0x2b333b, 0x2c3640, 0x2c3740, 0x2b3237, 0x2b3034, 0x2c3337, 0x2d3438, 0x191819, 0x211e1b, 0x1c1c1c, 0x19191b, 0x19191a, 0x19191a, 0x19191a, 0x1a1a1c, 0x1c1c1d, 0x1c1c1d, 0x1d1d20, 0x1f2022, 0x202124, 0x202227, 0x202327, 0x212427, 0x222529, 0x222427, 0x212021, 0x201f20, 0x211f1f, 0x232222, 0x262a2d, 0x272d34, 0x282e33, 0x2a3138, 0x2a333d, 0x2a343e, 0x2a3239, 0x2a2e30, 0x2b3031, 0x2a3339, 0x161619, 0x17171b, 0x1a1a1e, 0x1b1b1e, 0x19191b, 0x181819, 0x191919, 0x19191a, 0x1a1a1b, 0x1c1c1c, 0x1c1c1e, 0x1e1e21, 0x1f2024, 0x1f2329, 0x20242b, 0x212429, 0x212429, 0x22252b, 0x23272c, 0x23262b, 0x23262a, 0x24282c, 0x252b30, 0x262a2f, 0x272a2e, 0x282d31, 0x282f36, 0x282e36, 0x283036, 0x2a2e2f, 0x2a2d2f, 0x283036, 0x19181b, 0x1a1a1e, 0x1a1c20, 0x1a1b20, 0x19191c, 0x171719, 0x181819, 0x19191b, 0x1b1c1f, 0x1c1d20, 0x1d1d20, 0x1e1f21, 0x1e2125, 0x1f2229, 0x1f232a, 0x202328, 0x222528, 0x22252a, 0x21262e, 0x22272f, 0x22272e, 0x23282f, 0x24292f, 0x25282b, 0x25292b, 0x262b2e, 0x272b2f, 0x262a2d, 0x282e30, 0x282c2e, 0x272b2c, 0x282d32, 0x1a1b1c, 0x191b1f, 0x1c1f24, 0x1b1e23, 0x191a1f, 0x17171a, 0x171719, 0x1a1a1d, 0x1b1d21, 0x1c1f24, 0x1d2024, 0x1d2025, 0x1e2125, 0x1f2226, 0x202226, 0x222425, 0x212427, 0x202327, 0x202429, 0x212429, 0x22252a, 0x23282e, 0x23282e, 0x24272a, 0x242729, 0x24272a, 0x24272a, 0x262929, 0x272b2c, 0x262a2c, 0x262b2d, 0x272c30, 0x1d1e20, 0x1a1b20, 0x1b1e23, 0x1b1e22, 0x1a1b1f, 0x18181b, 0x18171a, 0x1a1a1e, 0x1b1d21, 0x1b1e23, 0x1b1f23, 0x1c1f23, 0x1d1f24, 0x1d2024, 0x1e2024, 0x1f2024, 0x1e2125, 0x1f2225, 0x202225, 0x202327, 0x212429, 0x22272d, 0x22272d, 0x22252a, 0x222427, 0x212123, 0x202022, 0x232424, 0x252829, 0x25292a, 0x262a2c, 0x272d2f, 0x1b1b1f, 0x1b1c20, 0x1b1c20, 0x191a1f, 0x191a1e, 0x19191d, 0x1a1a1e, 0x1a1c20, 0x1a1c21, 0x1a1d21, 0x1b1d21, 0x1b1e22, 0x1d1e23, 0x1d1f23, 0x1d1f23, 0x1e1f23, 0x1e1f22, 0x1e1e21, 0x1f2022, 0x1f2225, 0x202327, 0x202429, 0x20242a, 0x212428, 0x202125, 0x1e1e1e, 0x1e1c1c, 0x1f1f1f, 0x222222, 0x232424, 0x252827, 0x252829, 0x15161a, 0x17181c, 0x1a1a1d, 0x1a1b1f, 0x191a1e, 0x191a1e, 0x191b1f, 0x1a1c21, 0x1a1c21, 0x1a1b20, 0x1a1b1f, 0x1a1c20, 0x1b1d20, 0x1c1d21, 0x1c1d21, 0x1c1d21, 0x1c1d20, 0x1c1c1d, 0x1c1d1e, 0x1e1e20, 0x1e2022, 0x1f2124, 0x1f2226, 0x202226, 0x202121, 0x1f1d1d, 0x1e1e1e, 0x1e1d1d, 0x1e1c1c, 0x201e1e, 0x212120, 0x1e1e1e
};

int main(int argc, char **argv) {
    ei_impulse_result_t result;

    signal_t signal;
    numpy::signal_from_buffer(features, sizeof(features) / sizeof(features[0]), &signal);

    EI_IMPULSE_ERROR res = run_classifier(&signal, &result, false);
    printf("run_classifier returned: %d (DSP %d ms., Classification %d ms., Anomaly %d ms.)\n", res,
        result.timing.dsp, result.timing.classification, result.timing.anomaly);

    printf("Begin output\n");

#if EI_CLASSIFIER_OBJECT_DETECTION == 1
    for (size_t ix = 0; ix < EI_CLASSIFIER_OBJECT_DETECTION_COUNT; ix++) {
        auto bb = result.bounding_boxes[ix];
        if (bb.value == 0) {
            continue;
        }

        printf("%s (%f) [ x: %u, y: %u, width: %u, height: %u ]\n", bb.label, bb.value, bb.x, bb.y, bb.width, bb.height);
    }
#else
    // print the predictions
    printf("[");
    for (size_t ix = 0; ix < EI_CLASSIFIER_LABEL_COUNT; ix++) {
        printf("%.5f", result.classification[ix].value);
#if EI_CLASSIFIER_HAS_ANOMALY == 1
        printf(", ");
#else
        if (ix != EI_CLASSIFIER_LABEL_COUNT - 1) {
            printf(", ");
        }
#endif
    }
#if EI_CLASSIFIER_HAS_ANOMALY == 1
    printf("%.3f", result.anomaly);
#endif
    printf("]\n");
#endif

    printf("End output\n");
}
